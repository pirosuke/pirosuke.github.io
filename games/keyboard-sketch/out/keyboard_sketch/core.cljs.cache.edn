{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name keyboard-sketch.core, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {init-draw-area {:protocol-inline nil, :meta {:file "/home/htanaka/data/workspace/keyboard-sketch/src/keyboard_sketch/core.cljs", :line 5, :column 7, :end-line 5, :end-column 21, :arglists (quote ([]))}, :name keyboard-sketch.core/init-draw-area, :variadic false, :file "src/keyboard_sketch/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-board {:protocol-inline nil, :meta {:file "/home/htanaka/data/workspace/keyboard-sketch/src/keyboard_sketch/core.cljs", :line 10, :column 7, :end-line 10, :end-column 17, :arglists (quote ([]))}, :name keyboard-sketch.core/draw-board, :variadic false, :file "src/keyboard_sketch/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, setup {:protocol-inline nil, :meta {:file "/home/htanaka/data/workspace/keyboard-sketch/src/keyboard_sketch/core.cljs", :line 23, :column 7, :end-line 23, :end-column 12, :arglists (quote ([]))}, :name keyboard-sketch.core/setup, :variadic false, :file "src/keyboard_sketch/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, key-pressed {:protocol-inline nil, :meta {:file "/home/htanaka/data/workspace/keyboard-sketch/src/keyboard_sketch/core.cljs", :line 30, :column 7, :end-line 30, :end-column 18, :arglists (quote ([state event]))}, :name keyboard-sketch.core/key-pressed, :variadic false, :file "src/keyboard_sketch/core.cljs", :end-column 18, :method-params ([state event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state event]))}, draw-state {:protocol-inline nil, :meta {:file "/home/htanaka/data/workspace/keyboard-sketch/src/keyboard_sketch/core.cljs", :line 40, :column 7, :end-line 40, :end-column 17, :arglists (quote ([state]))}, :name keyboard-sketch.core/draw-state, :variadic false, :file "src/keyboard_sketch/core.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, keyboard-sketch {:protocol-inline nil, :meta {:file "/home/htanaka/data/workspace/keyboard-sketch/src/keyboard_sketch/core.cljs", :line 44, :column 14, :end-line 44, :end-column 29, :export true, :arglists (quote ([]))}, :name keyboard-sketch.core/keyboard-sketch, :variadic false, :file "src/keyboard_sketch/core.cljs", :end-column 29, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :fn :key :rgb :size :setup :middleware :c :host :key-pressed :host-id :no-start :x :draw}, :order [:rgb :x :y :key :c :host :size :setup :middleware :key-pressed :draw :no-start :fn :host-id]}, :doc nil}